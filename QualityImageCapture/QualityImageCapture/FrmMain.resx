<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>